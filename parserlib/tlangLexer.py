# Generated from tlang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\28")
        buf.write("\u01b7\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\2\3\3\3")
        buf.write("\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3")
        buf.write("\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3")
        buf.write("\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3")
        buf.write("!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3")
        buf.write("#\3#\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3")
        buf.write("*\3+\3+\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60")
        buf.write("\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63\3\64\6\64")
        buf.write("\u019e\n\64\r\64\16\64\u019f\3\65\3\65\3\65\3\65\6\65")
        buf.write("\u01a6\n\65\r\65\16\65\u01a7\3\66\3\66\7\66\u01ac\n\66")
        buf.write("\f\66\16\66\u01af\13\66\3\67\6\67\u01b2\n\67\r\67\16\67")
        buf.write("\u01b3\3\67\3\67\2\28\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64")
        buf.write("g\65i\66k\67m8\3\2\7\3\2\62;\5\2\62;CHch\5\2C\\aac|\6")
        buf.write("\2\62;C\\aac|\5\2\13\f\17\17\"\"\2\u01ba\2\3\3\2\2\2\2")
        buf.write("\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3")
        buf.write("\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2")
        buf.write("\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2")
        buf.write("\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3")
        buf.write("\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61")
        buf.write("\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2")
        buf.write("\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M")
        buf.write("\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2")
        buf.write("\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2")
        buf.write("\2\2k\3\2\2\2\2m\3\2\2\2\3o\3\2\2\2\5r\3\2\2\2\7x\3\2")
        buf.write("\2\2\tz\3\2\2\2\13|\3\2\2\2\r\u0085\3\2\2\2\17\u008d\3")
        buf.write("\2\2\2\21\u0091\3\2\2\2\23\u0093\3\2\2\2\25\u0095\3\2")
        buf.write("\2\2\27\u0097\3\2\2\2\31\u009b\3\2\2\2\33\u009f\3\2\2")
        buf.write("\2\35\u00a3\3\2\2\2\37\u00aa\3\2\2\2!\u00af\3\2\2\2#\u00b9")
        buf.write("\3\2\2\2%\u00c0\3\2\2\2\'\u00c5\3\2\2\2)\u00c9\3\2\2\2")
        buf.write("+\u00d6\3\2\2\2-\u00da\3\2\2\2/\u00e8\3\2\2\2\61\u00ed")
        buf.write("\3\2\2\2\63\u00f9\3\2\2\2\65\u0107\3\2\2\2\67\u0112\3")
        buf.write("\2\2\29\u011e\3\2\2\2;\u012d\3\2\2\2=\u013c\3\2\2\2?\u0141")
        buf.write("\3\2\2\2A\u0147\3\2\2\2C\u0153\3\2\2\2E\u0161\3\2\2\2")
        buf.write("G\u0175\3\2\2\2I\u0177\3\2\2\2K\u0179\3\2\2\2M\u017b\3")
        buf.write("\2\2\2O\u017d\3\2\2\2Q\u017f\3\2\2\2S\u0181\3\2\2\2U\u0183")
        buf.write("\3\2\2\2W\u0185\3\2\2\2Y\u0187\3\2\2\2[\u018a\3\2\2\2")
        buf.write("]\u018d\3\2\2\2_\u0190\3\2\2\2a\u0193\3\2\2\2c\u0196\3")
        buf.write("\2\2\2e\u0198\3\2\2\2g\u019d\3\2\2\2i\u01a1\3\2\2\2k\u01a9")
        buf.write("\3\2\2\2m\u01b1\3\2\2\2op\7/\2\2pq\7@\2\2q\4\3\2\2\2r")
        buf.write("s\7N\2\2st\7g\2\2tu\7o\2\2uv\7o\2\2vw\7c\2\2w\6\3\2\2")
        buf.write("\2xy\7*\2\2y\b\3\2\2\2z{\7+\2\2{\n\3\2\2\2|}\7t\2\2}~")
        buf.write("\7g\2\2~\177\7s\2\2\177\u0080\7w\2\2\u0080\u0081\7k\2")
        buf.write("\2\u0081\u0082\7t\2\2\u0082\u0083\7g\2\2\u0083\u0084\7")
        buf.write("u\2\2\u0084\f\3\2\2\2\u0085\u0086\7g\2\2\u0086\u0087\7")
        buf.write("p\2\2\u0087\u0088\7u\2\2\u0088\u0089\7w\2\2\u0089\u008a")
        buf.write("\7t\2\2\u008a\u008b\7g\2\2\u008b\u008c\7u\2\2\u008c\16")
        buf.write("\3\2\2\2\u008d\u008e\7V\2\2\u008e\u008f\7q\2\2\u008f\u0090")
        buf.write("\7v\2\2\u0090\20\3\2\2\2\u0091\u0092\7<\2\2\u0092\22\3")
        buf.write("\2\2\2\u0093\u0094\7}\2\2\u0094\24\3\2\2\2\u0095\u0096")
        buf.write("\7\177\2\2\u0096\26\3\2\2\2\u0097\u0098\7k\2\2\u0098\u0099")
        buf.write("\7p\2\2\u0099\u009a\7v\2\2\u009a\30\3\2\2\2\u009b\u009c")
        buf.write("\7r\2\2\u009c\u009d\7q\2\2\u009d\u009e\7u\2\2\u009e\32")
        buf.write("\3\2\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2")
        buf.write("\7v\2\2\u00a2\34\3\2\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5")
        buf.write("\7v\2\2\u00a5\u00a6\7t\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8")
        buf.write("\7p\2\2\u00a8\u00a9\7i\2\2\u00a9\36\3\2\2\2\u00aa\u00ab")
        buf.write("\7e\2\2\u00ab\u00ac\7j\2\2\u00ac\u00ad\7c\2\2\u00ad\u00ae")
        buf.write("\7t\2\2\u00ae \3\2\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1")
        buf.write("\7j\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3\7t\2\2\u00b3\u00b4")
        buf.write("\7a\2\2\u00b4\u00b5\7e\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7")
        buf.write("\7f\2\2\u00b7\u00b8\7g\2\2\u00b8\"\3\2\2\2\u00b9\u00ba")
        buf.write("\7n\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd")
        buf.write("\7i\2\2\u00bd\u00be\7v\2\2\u00be\u00bf\7j\2\2\u00bf$\3")
        buf.write("\2\2\2\u00c0\u00c1\7r\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3")
        buf.write("\7y\2\2\u00c3\u00c4\7\64\2\2\u00c4&\3\2\2\2\u00c5\u00c6")
        buf.write("\7f\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7x\2\2\u00c8(\3")
        buf.write("\2\2\2\u00c9\u00ca\7f\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc")
        buf.write("\7x\2\2\u00cc\u00cd\7a\2\2\u00cd\u00ce\7p\2\2\u00ce\u00cf")
        buf.write("\7q\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7a\2\2\u00d1\u00d2")
        buf.write("\7g\2\2\u00d2\u00d3\7w\2\2\u00d3\u00d4\7e\2\2\u00d4\u00d5")
        buf.write("\7n\2\2\u00d5*\3\2\2\2\u00d6\u00d7\7c\2\2\u00d7\u00d8")
        buf.write("\7d\2\2\u00d8\u00d9\7u\2\2\u00d9,\3\2\2\2\u00da\u00db")
        buf.write("\7u\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7i\2\2\u00dd\u00de")
        buf.write("\7p\2\2\u00de\u00df\7g\2\2\u00df\u00e0\7f\2\2\u00e0\u00e1")
        buf.write("\7a\2\2\u00e1\u00e2\7o\2\2\u00e2\u00e3\7q\2\2\u00e3\u00e4")
        buf.write("\7f\2\2\u00e4\u00e5\7w\2\2\u00e5\u00e6\7n\2\2\u00e6\u00e7")
        buf.write("\7q\2\2\u00e7.\3\2\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea")
        buf.write("\7q\2\2\u00ea\u00eb\7y\2\2\u00eb\u00ec\7z\2\2\u00ec\60")
        buf.write("\3\2\2\2\u00ed\u00ee\7e\2\2\u00ee\u00ef\7j\2\2\u00ef\u00f0")
        buf.write("\7c\2\2\u00f0\u00f1\7t\2\2\u00f1\u00f2\7a\2\2\u00f2\u00f3")
        buf.write("\7q\2\2\u00f3\u00f4\7h\2\2\u00f4\u00f5\7a\2\2\u00f5\u00f6")
        buf.write("\7w\2\2\u00f6\u00f7\7\65\2\2\u00f7\u00f8\7\64\2\2\u00f8")
        buf.write("\62\3\2\2\2\u00f9\u00fa\7W\2\2\u00fa\u00fb\7\65\2\2\u00fb")
        buf.write("\u00fc\7\64\2\2\u00fc\u00fd\7\60\2\2\u00fd\u00fe\7w\2")
        buf.write("\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7p\2\2\u0100\u0101\7")
        buf.write("v\2\2\u0101\u0102\7a\2\2\u0102\u0103\7v\2\2\u0103\u0104")
        buf.write("\7q\2\2\u0104\u0105\7a\2\2\u0105\u0106\7v\2\2\u0106\64")
        buf.write("\3\2\2\2\u0107\u0108\7r\2\2\u0108\u0109\7q\2\2\u0109\u010a")
        buf.write("\7y\2\2\u010a\u010b\7\64\2\2\u010b\u010c\7a\2\2\u010c")
        buf.write("\u010d\7d\2\2\u010d\u010e\7w\2\2\u010e\u010f\7i\2\2\u010f")
        buf.write("\u0110\7i\2\2\u0110\u0111\7{\2\2\u0111\66\3\2\2\2\u0112")
        buf.write("\u0113\7q\2\2\u0113\u0114\7r\2\2\u0114\u0115\7a\2\2\u0115")
        buf.write("\u0116\7O\2\2\u0116\u0117\7w\2\2\u0117\u0118\7n\2\2\u0118")
        buf.write("\u0119\7v\2\2\u0119\u011a\7k\2\2\u011a\u011b\7r\2\2\u011b")
        buf.write("\u011c\7n\2\2\u011c\u011d\7{\2\2\u011d8\3\2\2\2\u011e")
        buf.write("\u011f\7u\2\2\u011f\u0120\7v\2\2\u0120\u0121\7t\2\2\u0121")
        buf.write("\u0122\7k\2\2\u0122\u0123\7p\2\2\u0123\u0124\7i\2\2\u0124")
        buf.write("\u0125\7a\2\2\u0125\u0126\7q\2\2\u0126\u0127\7h\2\2\u0127")
        buf.write("\u0128\7a\2\2\u0128\u0129\7n\2\2\u0129\u012a\7k\2\2\u012a")
        buf.write("\u012b\7u\2\2\u012b\u012c\7v\2\2\u012c:\3\2\2\2\u012d")
        buf.write("\u012e\7n\2\2\u012e\u012f\7k\2\2\u012f\u0130\7u\2\2\u0130")
        buf.write("\u0131\7v\2\2\u0131\u0132\7a\2\2\u0132\u0133\7q\2\2\u0133")
        buf.write("\u0134\7h\2\2\u0134\u0135\7a\2\2\u0135\u0136\7u\2\2\u0136")
        buf.write("\u0137\7v\2\2\u0137\u0138\7t\2\2\u0138\u0139\7k\2\2\u0139")
        buf.write("\u013a\7p\2\2\u013a\u013b\7i\2\2\u013b<\3\2\2\2\u013c")
        buf.write("\u013d\7o\2\2\u013d\u013e\7c\2\2\u013e\u013f\7m\2\2\u013f")
        buf.write("\u0140\7g\2\2\u0140>\3\2\2\2\u0141\u0142\7o\2\2\u0142")
        buf.write("\u0143\7k\2\2\u0143\u0144\7p\2\2\u0144\u0145\7w\2\2\u0145")
        buf.write("\u0146\7u\2\2\u0146@\3\2\2\2\u0147\u0148\7w\2\2\u0148")
        buf.write("\u0149\7\65\2\2\u0149\u014a\7\64\2\2\u014a\u014b\7a\2")
        buf.write("\2\u014b\u014c\7q\2\2\u014c\u014d\7h\2\2\u014d\u014e\7")
        buf.write("a\2\2\u014e\u014f\7e\2\2\u014f\u0150\7j\2\2\u0150\u0151")
        buf.write("\7c\2\2\u0151\u0152\7t\2\2\u0152B\3\2\2\2\u0153\u0154")
        buf.write("\7u\2\2\u0154\u0155\7v\2\2\u0155\u0156\7t\2\2\u0156\u0157")
        buf.write("\7k\2\2\u0157\u0158\7p\2\2\u0158\u0159\7i\2\2\u0159\u015a")
        buf.write("\7a\2\2\u015a\u015b\7q\2\2\u015b\u015c\7h\2\2\u015c\u015d")
        buf.write("\7a\2\2\u015d\u015e\7k\2\2\u015e\u015f\7p\2\2\u015f\u0160")
        buf.write("\7v\2\2\u0160D\3\2\2\2\u0161\u0162\7u\2\2\u0162\u0163")
        buf.write("\7v\2\2\u0163\u0164\7t\2\2\u0164\u0165\7k\2\2\u0165\u0166")
        buf.write("\7p\2\2\u0166\u0167\7i\2\2\u0167\u0168\7a\2\2\u0168\u0169")
        buf.write("\7e\2\2\u0169\u016a\7j\2\2\u016a\u016b\7c\2\2\u016b\u016c")
        buf.write("\7t\2\2\u016c\u016d\7n\2\2\u016d\u016e\7k\2\2\u016e\u016f")
        buf.write("\7u\2\2\u016f\u0170\7v\2\2\u0170\u0171\7a\2\2\u0171\u0172")
        buf.write("\7k\2\2\u0172\u0173\7p\2\2\u0173\u0174\7v\2\2\u0174F\3")
        buf.write("\2\2\2\u0175\u0176\7-\2\2\u0176H\3\2\2\2\u0177\u0178\7")
        buf.write("/\2\2\u0178J\3\2\2\2\u0179\u017a\7,\2\2\u017aL\3\2\2\2")
        buf.write("\u017b\u017c\7\61\2\2\u017cN\3\2\2\2\u017d\u017e\7\'\2")
        buf.write("\2\u017eP\3\2\2\2\u017f\u0180\7`\2\2\u0180R\3\2\2\2\u0181")
        buf.write("\u0182\7>\2\2\u0182T\3\2\2\2\u0183\u0184\7@\2\2\u0184")
        buf.write("V\3\2\2\2\u0185\u0186\7?\2\2\u0186X\3\2\2\2\u0187\u0188")
        buf.write("\7#\2\2\u0188\u0189\7?\2\2\u0189Z\3\2\2\2\u018a\u018b")
        buf.write("\7>\2\2\u018b\u018c\7?\2\2\u018c\\\3\2\2\2\u018d\u018e")
        buf.write("\7@\2\2\u018e\u018f\7?\2\2\u018f^\3\2\2\2\u0190\u0191")
        buf.write("\7\61\2\2\u0191\u0192\7^\2\2\u0192`\3\2\2\2\u0193\u0194")
        buf.write("\7^\2\2\u0194\u0195\7\61\2\2\u0195b\3\2\2\2\u0196\u0197")
        buf.write("\7#\2\2\u0197d\3\2\2\2\u0198\u0199\7?\2\2\u0199\u019a")
        buf.write("\7?\2\2\u019a\u019b\7@\2\2\u019bf\3\2\2\2\u019c\u019e")
        buf.write("\t\2\2\2\u019d\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f")
        buf.write("\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0h\3\2\2\2\u01a1")
        buf.write("\u01a2\7\62\2\2\u01a2\u01a3\7z\2\2\u01a3\u01a5\3\2\2\2")
        buf.write("\u01a4\u01a6\t\3\2\2\u01a5\u01a4\3\2\2\2\u01a6\u01a7\3")
        buf.write("\2\2\2\u01a7\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8j")
        buf.write("\3\2\2\2\u01a9\u01ad\t\4\2\2\u01aa\u01ac\t\5\2\2\u01ab")
        buf.write("\u01aa\3\2\2\2\u01ac\u01af\3\2\2\2\u01ad\u01ab\3\2\2\2")
        buf.write("\u01ad\u01ae\3\2\2\2\u01ael\3\2\2\2\u01af\u01ad\3\2\2")
        buf.write("\2\u01b0\u01b2\t\6\2\2\u01b1\u01b0\3\2\2\2\u01b2\u01b3")
        buf.write("\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4")
        buf.write("\u01b5\3\2\2\2\u01b5\u01b6\b\67\2\2\u01b6n\3\2\2\2\7\2")
        buf.write("\u019f\u01a7\u01ad\u01b3\3\b\2\2")
        return buf.getvalue()


class tlangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    PLUS = 35
    MINUS = 36
    MUL = 37
    DIV = 38
    MOD = 39
    STRCAT = 40
    LT = 41
    GT = 42
    EQ = 43
    NEQ = 44
    LTE = 45
    GTE = 46
    AND = 47
    OR = 48
    NOT = 49
    IMPLIES = 50
    NUM = 51
    HEX = 52
    NAME = 53
    Whitespace = 54

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'->'", "'Lemma'", "'('", "')'", "'requires'", "'ensures'", 
            "'Tot'", "':'", "'{'", "'}'", "'int'", "'pos'", "'nat'", "'string'", 
            "'char'", "'char_code'", "'length'", "'pow2'", "'div'", "'div_non_eucl'", 
            "'abs'", "'signed_modulo'", "'powx'", "'char_of_u32'", "'U32.uint_to_t'", 
            "'pow2_buggy'", "'op_Multiply'", "'string_of_list'", "'list_of_string'", 
            "'make'", "'minus'", "'u32_of_char'", "'string_of_int'", "'string_charlist_int'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "'<'", "'>'", "'='", 
            "'!='", "'<='", "'>='", "'/\\'", "'\\/'", "'!'", "'==>'" ]

    symbolicNames = [ "<INVALID>",
            "PLUS", "MINUS", "MUL", "DIV", "MOD", "STRCAT", "LT", "GT", 
            "EQ", "NEQ", "LTE", "GTE", "AND", "OR", "NOT", "IMPLIES", "NUM", 
            "HEX", "NAME", "Whitespace" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
                  "STRCAT", "LT", "GT", "EQ", "NEQ", "LTE", "GTE", "AND", 
                  "OR", "NOT", "IMPLIES", "NUM", "HEX", "NAME", "Whitespace" ]

    grammarFileName = "tlang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


